# Clean the workspace and console
closeAllConnections(); rm(list=ls())
cat("\014"); graphics.off()
# Set working directory to source
this.dir <- dirname(parent.frame(2)$ofile)
parent.frame(2)
parent.frame(2)$ofile
getwd()
dir()
# Folder path for results
folres = paste0("./results/test/")
# Main packages
library("EpiEstim")
library("caTools")
# Main functions to run EpiFilter
files.sources = list.files(path = "./main")
for (i in 1:length(files.sources)) {
source(paste0(c("./main/", files.sources[i]), collapse = ''))
}
# Decide if to use pre-processed data (5-day moving average)
preProc = 1; if(preProc){print('Using filtered data')}
# For fixed window get times of incidence curve
win = 7  # weekly
if(!preProc){
# Load flu data preprocessed with 5-day moving average
Iflu = read.csv('data/test/Iflu.csv'); Iflu = Iflu[[1]]
Lflu = read.csv('data/test/Lflu.csv'); Lflu = Lflu[[1]]
genflu = read.csv('data/test/genflu.csv'); genflu = genflu[[1]]
# Load sars data preprocessed with 5-day moving average
Isars = read.csv('data/test/Isars.csv'); Isars = Isars[[1]]
Lsars = read.csv('data/test/Lsars.csv'); Lsars = Lsars[[1]]
gensars = read.csv('data/test/gensars.csv'); gensars = gensars[[1]]
}else{
# Load flu data preprocessed with 5-day moving average
Iflu = read.csv('data/test/IfluFilt.csv'); Iflu = Iflu[[1]]
Lflu = read.csv('data/test/LfluFilt.csv'); Lflu = Lflu[[1]]
genflu = read.csv('data/test/genflu.csv'); genflu = genflu[[1]]
# Load sars data preprocessed with 5-day moving average
Isars = read.csv('data/test/IsarsFilt.csv'); Isars = Isars[[1]]
Lsars = read.csv('data/test/LsarsFilt.csv'); Lsars = Lsars[[1]]
gensars = read.csv('data/test/gensars.csv'); gensars = gensars[[1]]
}
head(Iflue)
head(Iflu)
Iful
Iflu
read.csv('data/test/IfluFilt.csv')
# Times of series
tflu = 8:length(Iflu); tsars = 20:length(Isars)
# Plotting of incidence
Ipltflu = Iflu[seq(tflu[1]+1,length(Iflu))]
Ipltsars = Isars[seq(tsars[1]+1,length(Isars))]
# Setup grid and noise parameters
Rmin = 0.01; Rmax = 10; eta = 0.1
# Uniform prior over grid of size m
m = 200; pR0 = (1/m)*rep(1, m)
# Delimited grid defining space of R
Rgrid = seq(Rmin, Rmax, length.out = m)
Rgrid
# Time series lengths
nflu = length(tflu); nsars = length(tsars)
Rgrid
m
eta
pR0
nflu
Lfu
Lflu
epiFilter
Lsars
sum(Lsars)
sum(Lflu)
Iflue
Iflu
sum(Lflu)
sum(Iflu)
sum(Lsars)
sum(Isars)
Rfilt_flu = epiFilter(Rgrid, m, eta, pR0, nflu, Lflu[tflu], Iflu[tflu], a)
# Priors and settings (confidence intervals fixed by a)
Rprior = c(1, 2); a = 0.025
Rprior = c(1, 2); a = 0.025
# Uniform prior over grid of size m
m = 200; pR0 = (1/m)*rep(1, m)
# Delimited grid defining space of R
Rgrid = seq(Rmin, Rmax, length.out = m)
# Time series lengths
nflu = length(tflu); nsars = length(tsars)
Rfilt_flu = epiFilter(Rgrid, m, eta, pR0, nflu, Lflu[tflu], Iflu[tflu], a)
Rfilt_flu
names(Rfilt_flu)
head(Rfilt_flu[[1]])
head(Rfilt_flu[[2]])
dim(Rfilt_flu[[2]])
dim(Rfilt_flu[[3]])
head(Rfilt_flu[[3]])
head(Rfilt_flu[[1]])
head(Rfilt_flu[[4]])
dim(Rfilt_flu[[4]])
cor(Rfilt_flu[[1]], Rfilt_flu[[3]])
tt <- Rfilt_flu[[4]]
dim(tt)
median(tt[1,])
head(tt[,1:5])
median(tt[2,])
median(tt[3,])
median(tt[4,])
median(tt[5,])
median(tt[6,])
median(tt[7,])
median(tt[8,])
tail(tt)
tt[1,]
tt[2,]
tt <- Rfilt_flu[[2]]
dim(tt)
head(t(tt))
